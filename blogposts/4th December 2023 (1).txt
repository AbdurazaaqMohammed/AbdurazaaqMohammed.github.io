<h2>Flutter - Converting a Color to MaterialColor to be used in ThemeData.</h2>
<p>This allows letting the user pick a theme color for the app, and works with flutter_colorpicker too.
Here is the code I found by XploitsR on StackOverflow
<code><pre>MaterialColor getMaterialColor(Color color) {
final int red = color.red;
final int green = color.green;
final int blue = color.blue;
final int alpha = color.alpha;

final Map&lt;int, Color&gt; shades = {
  50: Color.fromARGB(alpha, red, green, blue),
  100: Color.fromARGB(alpha, red, green, blue),
  200: Color.fromARGB(alpha, red, green, blue),
  300: Color.fromARGB(alpha, red, green, blue),
  400: Color.fromARGB(alpha, red, green, blue),
  500: Color.fromARGB(alpha, red, green, blue),
  600: Color.fromARGB(alpha, red, green, blue),
  700: Color.fromARGB(alpha, red, green, blue),
  800: Color.fromARGB(alpha, red, green, blue),
  900: Color.fromARGB(alpha, red, green, blue),
};

 return MaterialColor(color.value, shades);
}</pre></code>
This can then be used as primarySwatch in ColorScheme.fromSwatch in ThemeData.</p>
